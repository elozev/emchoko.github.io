{"version":3,"sources":["webpack:///./src/components/Hero.js","webpack:///./src/assets/videos/hero.mp4","webpack:///./src/pages/faq.js"],"names":["Wrapper","styled","div","props","isBig","isVideo","bgImage","Hero","img","title","subtitle","children","videoRef","useRef","useEffect","ua","navigator","userAgent","toLowerCase","indexOf","current","player","controls","playsinline","muted","setAttribute","autoplay","setTimeout","promise","play","then","catch","videoParentRef","style","display","className","classNames","ref","autoPlay","playsInline","loop","width","src","videoSrc","type","href","id","height","viewBox","class","fill","xmlns","fill-rule","d","defaultProps","module","exports","query","withTrans","data","t","useState","openIndex","setOpenIndex","window","location","hash","slice","description","isDark","alt","header","childImageSharp","fluid","map","el","index","key","data-toggle","data-target","aria-expanded","aria-controls","question","aria-labelledby","data-parent","dangerouslySetInnerHTML","translation","text","__html"],"mappings":"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","file":"component---src-pages-faq-js-017143de4b568e3a0d2b.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport styled from 'styled-components';\nimport videoSrc from '../assets/videos/hero.mp4';\n\nconst Wrapper = styled.div`\n    position: relative;\n    width: 100vw;\n    min-height: ${props => props.isBig ? '100vh' : '75vh'};\n\n    height: ${props => props.isVideo ? '100vh' : 'none'};\n    overflow: hidden;\n\n    .video-wrapper {\n        height: 100%;\n        top: 0;\n        left: 0;\n        overflow: hidden;\n        position: absolute;\n        width: 100%;\n        z-index: 0;\n\n        video {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n\n    .content {\n        background: rgba(17, 17, 17, .2);\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    &:before {\n        background: url(${props => props.bgImage});\n        \n        ${props => !props.isVideo && `\n            content: \"\";\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 75vh;\n            object-fit: cover;\n            background-attachment: fixed;\n            background-repeat: no-repeat;\n            background-size: cover;\n            background-position: center center;\n            // filter: brightness(60%);\n        `}\n\n        @media screen and (max-width: 991px) {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-attachment: fixed;\n            background-repeat: no-repeat;\n            background-size: cover;\n            background-position: center center;\n            /* filter: brightness(60%); */\n        }\n    }\n    \n    .chevron-down {\n        position: absolute;\n        bottom: 30px;\n        left: 50%;\n        transform: translate(-50%);        \n        cursor: pointer;\n    }\n`\n\nconst Hero = ({ isBig, img, title, subtitle, children, isVideo }) => {\n\n    const videoRef = useRef();\n\n    const isSafari = () => {\n        const ua = navigator.userAgent.toLowerCase();\n        return ua.indexOf(\"safari\") > -1 && ua.indexOf(\"chrome\") < 0;\n    }\n\n\n    useEffect(() => {\n\n        if (isSafari() && videoRef.current) {\n            // obtain reference to the video element\n            const player = videoRef.current.children[0];\n\n            // if the reference to video player has been obtained\n            if (player) {\n                // set the video attributes using javascript as per the\n                // webkit Policy\n                player.controls = false;\n                player.playsinline = true;\n                player.muted = true;\n                player.setAttribute(\"muted\", \"\"); // leave no stones unturned :)\n                player.autoplay = true;\n\n                // Let's wait for an event loop tick and be async.\n                setTimeout(() => {\n                    // player.play() might return a promise but it's not guaranteed crossbrowser.\n                    const promise = player.play();\n                    // let's play safe to ensure that if we do have a promise\n                    if (promise.then) {\n                        promise\n                            .then(() => { })\n                            .catch(() => {\n                                // if promise fails, hide the video and fallback to <img> tag\n                                videoParentRef.current.style.display = \"none\";\n                                // setShouldUseImage(true);\n                            });\n                    }\n                }, 0);\n            }\n        }\n\n        // if (videoRef && videoRef.current) {\n        //     videoRef.current.play();\n\n        //     videoRef.current.oncanplaythrough = function () {\n        //         videoRef.current.muted = true;\n        //         videoRef.current.play();\n        //     }\n        // }\n    }, [videoRef]);\n\n\n    return (\n        <>\n            <header>\n                <Wrapper bgImage={img} isBig={isBig} isVideo={isVideo} className={classNames(\"header-wrapper\")}>\n                    {isBig && (\n                        <>\n                            <div className=\"video-wrapper\">\n                                <video\n                                    ref={videoRef}\n                                    controls={false}\n                                    muted={true}\n                                    autoPlay={true}\n                                    playsInline={true}\n                                    loop={true}\n                                    width=\"100%\"\n                                >\n                                    <source src={videoSrc} type=\"video/mp4\"></source>\n                                </video>\n                            </div>\n                        </>\n                    )}\n                    <div className=\"content\">\n                        <div>\n                            <h1>{title}</h1>\n                            <hr className=\"my-4 white\" />\n                            {subtitle && (<p className=\"text-heading\">{subtitle}</p>)}\n\n                            <div>\n                                {children}\n                            </div>\n\n                            {isBig && (\n                                <a href=\"#chevron\" className=\"chevron-down\" id=\"chevron\">\n                                    <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-chevron-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                                    </svg>\n                                </a>\n                            )}\n                        </div>\n                    </div>\n                </Wrapper>\n            </header>\n        </>\n    )\n}\n\nHero.defaultProps = {\n    isBig: false,\n    img: \"\",\n    title: \"\",\n    subtitle: \"\",\n}\n\nHero.propTypes = {\n    isBig: PropTypes.bool,\n    img: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired,\n}\n\nexport default Hero;","module.exports = __webpack_public_path__ + \"static/hero-89910070c1d9e4e314025d5707b3cb7c.mp4\";","import React, { useEffect, useState } from 'react';\nimport Layout from \"../components/Layout\";\nimport Hero from \"../components/Hero\";\nimport withTrans from '../i18n/withTranslation';\n\n\nconst FaqPage = ({ data, t }) => {\n  const [openIndex, setOpenIndex] = useState(0);\n\n  useEffect(() => {\n    if (window.location.hash) {\n      setOpenIndex(window.location.hash.slice(1));\n    }\n  }, []);\n\n  const getContent = (translation) => {\n    return { __html: `${t(translation)}` }\n  }\n\n  return (\n    <>\n      <Layout\n        title={t('site.pages.FaqPage.meta.title')}\n        description={t('site.pages.FaqPage.meta.description')}\n      >\n        <Hero\n          isDark={true}\n          title={t('site.pages.FaqPage.title')}\n          alt={t('site.pages.FaqPage.headerAlt')}\n          img={data.header.childImageSharp.fluid.src}\n        />\n\n        <div className=\"container my-5\">\n\n          <div id=\"accordion\">\n\n\n            {t('site.pages.FaqPage.list').map((el, index) => {\n              return (\n                <div className=\"card\" key={index}>\n                  <div id={index} className=\"fixanchor\"></div>\n                  <div className=\"card-header py-3 text-center\" id={\"heading\" + index}\n                    data-toggle=\"collapse\"\n                    data-target={\"#collapse\" + index}\n                    aria-expanded={index == openIndex}\n                    aria-controls={\"collapse\" + index}\n                  >\n                    <h5 className=\"mb-0\">\n                      <span className=\"faq-question\">\n                        {el.question}\n                      </span>\n                    </h5>\n                  </div>\n                  <div id={\"collapse\" + index} className={\"collapse \" + (index == openIndex && \"show\")} aria-labelledby={\"heading\" + index} data-parent=\"#accordion\">\n                    <div className=\"card-body\" dangerouslySetInnerHTML={getContent(el.text)}></div>\n                  </div>\n                </div>\n              )\n            }\n            )}\n          </div>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query FaqPage {\n          header: file(relativePath: {eq: \"faq-hero.jpg\"}) {\n          childImageSharp {\n            fluid(quality: 100, maxWidth: 1920) {\n          src\n        }\n      }\n    }\n  }\n`;\n\nexport default withTrans(FaqPage);"],"sourceRoot":""}