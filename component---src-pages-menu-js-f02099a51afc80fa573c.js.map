{"version":3,"sources":["webpack:///./src/pages/menu.js"],"names":["query","MenuPage","data","imageLinks","images","map","node","src","extractLinks","edges","childImageSharp","resize","width","height","useState","isLigthboxOpen","setIsLightboxOpen","photoIndex","setPhotoIndex","title","constants","INDEX","META","TITLE","className","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","index","lg","fluid","alt","onClick"],"mappings":"4FAAA,sOA0FaA,EAAK,YAoBHC,UA7EE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGZC,EAVa,SAACC,GACpB,OAAOA,EAAOC,KAAI,SAACC,GACjB,OAAOA,EAAKC,OAQKC,CADON,EAAKE,OAAOK,MAnBtBJ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACrB,MAAO,CACLC,IAAKD,EAAKI,gBAAgBC,OAAOJ,IAEjCK,MAAON,EAAKI,gBAAgBC,OAAOC,MACnCC,OAAQP,EAAKI,gBAAgBC,OAAOE,YAYX,EAKeC,oBAAS,GAA9CC,EALsB,KAKNC,EALM,OAMOF,mBAAS,GAAtCG,EANsB,KAMVC,EANU,KAQ7B,OACE,kBAAC,IAAD,CACEC,MAAOC,IAAUC,MAAMC,KAAKC,OAE5B,kBAAC,IAAD,CAAWC,UAAU,aACnB,yBAAKA,UAAU,eACb,oCACA,kBAAC,IAAD,OAGDT,GACC,oCACE,kBAAC,IAAD,CACEU,QAAStB,EAAWc,GACpBS,QAASvB,GAAYc,EAAa,GAAKd,EAAWwB,QAClDC,QAASzB,GAAYc,EAAad,EAAWwB,OAAS,GAAKxB,EAAWwB,QACtEE,eAAgB,WAAQb,GAAkB,IAC1Cc,kBAAmB,WACjBZ,GAAeD,EAAad,EAAWwB,OAAS,GAAKxB,EAAWwB,SAElEI,kBAAmB,WACjBb,GAAeD,EAAa,GAAKd,EAAWwB,YAMpD,yBAAKH,UAAU,QACb,kBAAC,IAAD,KACGtB,EAAKE,OAAOK,MAAMJ,KAAI,WAAW2B,GAAX,IAAG1B,EAAH,EAAGA,KAAH,OACrB,kBAAC,IAAD,CAAK2B,GAAI,GACP,kBAAC,IAAD,CACET,UAAU,oBACVU,OAAK,EACL3B,IAAKD,EAAKI,gBAAgBC,OAAOJ,IACjC4B,IAAI,OACJC,QAAS,WACPlB,EAAcc,GACdhB,GAAkB","file":"component---src-pages-menu-js-f02099a51afc80fa573c.js","sourcesContent":["import React, { useState } from \"react\";\nimport Lightbox from 'react-image-lightbox';\nimport { Col, Container, Row, Image } from \"react-bootstrap\"\nimport Hero from \"../components/index/hero\"\nimport Reservation from \"../components/index/reservation\"\nimport LeftText from \"../components/index/left-text\"\nimport RightText from \"../components/index/right-text\"\nimport DividerParalax from \"../components/index/divider-paralax\"\nimport Layout from \"../components/site-wide/layout/layout\"\nimport constants from \"../utils/constants\"\nimport USP from \"../components/index/usp\"\nimport Divider from \"../components/common/divider\"\nimport { graphql } from \"gatsby\"\n\n\nconst trimImages = (imageSet) => {\n  return imageSet.map(({ node }) => {\n    return {\n      src: node.childImageSharp.resize.src,\n      // thumbnail: node.childImageSharp.resize.src,\n      width: node.childImageSharp.resize.width,\n      height: node.childImageSharp.resize.height,\n    }\n  })\n}\n\nconst extractLinks = (images) => {\n  return images.map((node) => {\n    return node.src;\n  })\n}\n\n\nconst MenuPage = ({ data }) => {\n\n  const images = trimImages(data.images.edges);\n  const imageLinks = extractLinks(images);\n\n  const [isLigthboxOpen, setIsLightboxOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0);\n\n  return (\n    <Layout\n      title={constants.INDEX.META.TITLE}\n    >\n      <Container className=\"mt-5 pt-5\">\n        <div className='text-center'>\n          <h1>Меню</h1>\n          <Divider />\n        </div>\n\n        {isLigthboxOpen && (\n          <>\n            <Lightbox\n              mainSrc={imageLinks[photoIndex]}\n              nextSrc={imageLinks[(photoIndex + 1) % imageLinks.length]}\n              prevSrc={imageLinks[(photoIndex + imageLinks.length - 1) % imageLinks.length]}\n              onCloseRequest={() => { setIsLightboxOpen(false) }}\n              onMovePrevRequest={() => {\n                setPhotoIndex((photoIndex + imageLinks.length - 1) % imageLinks.length);\n              }}\n              onMoveNextRequest={() => {\n                setPhotoIndex((photoIndex + 1) % imageLinks.length);\n              }}\n            />\n          </>\n        )}\n\n        <div className=\"mt-5\">\n          <Row>\n            {data.images.edges.map(({ node }, index) => (\n              <Col lg={4}>\n                <Image\n                  className=\"mb-5 menu-gallery\"\n                  fluid\n                  src={node.childImageSharp.resize.src}\n                  alt=\"Меню\"\n                  onClick={() => {\n                    setPhotoIndex(index);\n                    setIsLightboxOpen(true);\n                  }} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query MenuQuery {\n    images: allFile(filter: {sourceInstanceName: {eq: \"images-menu\"}}, sort: {fields: childImageSharp___resize___originalName}) {\n      edges {\n        node {\n          absolutePath\n          childImageSharp {\n            resize(width: 600, quality: 100) {\n              src\n              originalName\n              width\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default MenuPage\n"],"sourceRoot":""}